# .github/workflows/deploy.yml
# This workflow builds your Pelican site and your CV PDF, then deploys to GitHub Pages.

name: Build and Deploy CV and Website

on:
  # Runs on pushes to the main branch
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, and disallow cancel in-progress runs.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          python -m pip install --upgrade pip
          # Install Pelican and other site dependencies from your requirements.txt
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

          # install @rbardini/resumed and the jsonresume-theme-class theme 
          npm install @rbardini/resumed jsonresume-theme-class # or your theme of choice

      - name: Generate PDF from CV
        run: |
          echo "Generating PDF from content/data/cv.yml..."
          # The al-folio-python template is configured to copy static files from 'content/extra'.
          # We create this directory to place our generated PDF into.
          mkdir -p .build content/pdf
          
          # Step 1: Convert your YAML CV to a temporary JSON file in the .build directory.
          python -c "import yaml, json; print(json.dumps(yaml.safe_load(open('content/data/cv.yml'))))" > .build/resume.json
          
          # Step 2: Generate the PDF, reading the temporary JSON file from the .build directory.
          echo "Validating resume.json"
          npx resumed validate .build/resume.json
          
          npx resumed export .build/resume.json --output output/pdf/CV.pdf --theme jsonresume-theme-class 
          echo "CV.pdf successfully generated at content/pdf/CV.pdf"
          
          # Step 3: Clean up the intermediate build directory and its contents.
          rm -rf .build

      - name: Build website with Pelican
        run: |
          echo "Building Pelican site..."
          # Pelican will now build the HTML site and automatically find and copy 
          # 'content/pdf/CV.pdf' to the final 'output/pdf/CV.pdf' directory.
          python -m pelican -s publishconf.py

      - name: Fix permissions for artifact
        run: |
          chmod -c -R +rX "output/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      - name: Upload artifact for deployment
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the entire output directory
          path: './output'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    # This job depends on the 'build' job completing successfully
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
